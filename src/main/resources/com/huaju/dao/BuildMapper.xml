<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huaju.dao.BuildMapper">
    <!--public List<Company> selectCompanyInBuild();查找有楼盘发布的开发商的id和公司名字  珂-->
 <select id="selectCompanyInBuild" resultType="Company">
     select DISTINCT build.comid,company.comname from build,company where build.comid=company.comid
 </select>

    <!--public List<Build> selectBuilding();-->
<select id="selectBuilding" resultType="Build">
    SELECT * FROM build
</select>
    <resultMap id="BuildMap" type="Build">
        <id property="buildingid" column="buildingid"/>
        <result property="building" column="building"/>
        <result property="ctaid" column="ctaid"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="barea" column="barea"/>
        <result property="bpicture" column="bpicture"/>
        <result property="tenement" column="tenement"/>
        <result property="btype" column="btype"/>
        <result property="bline" column="bline"/>
        <result property="comid" column="comid"/>
        <result property="charactere" column="charactere"/>
        <result property="bperprice" column="bperprice"/>
        <result property="btotalprice" column="btotalprice"/>
        <result property="acreage" column="acreage"/>
        <result property="conditions" column="conditions"/>
        <result property="starttime" column="starttime"/>
        <result property="endtime" column="endtime"/>
        <result property="genre" column="genre"/>
        <result property="agelimit" column="agelimit"/>
        <result property="landtime" column="landtime"/>
        <result property="tencompany" column="tencompany"/>
        <result property="tencost" column="tencost"/>
        <result property="tentype" column="tentype"/>
        <result property="greenrate" column="greenrate"/>
        <result property="carport" column="carport"/>
        <result property="cubage" column="cubage"/>
        <result property="bdetail" column="bdetail"/>
        <result property="fitment" column="fitment"/>
        <result property="discounts" column="discounts"/>
        <result property="bmaxtotalprice" column="bmaxtotalprice"/>
        <result property="maxacreage" column="maxacreage"/>
        <result property="bsalestatus" column="bsalestatus"/>
        <association property="cta" javaType="Cta">
            <result property="ctarelname" column="ctarelname"/>
            <result property="ctaimg" column="ctaimg"/>
        </association>
        <collection property="buildType"  ofType="com.huaju.entity.BuildType" column="buildingid"
                    select="com.huaju.dao.BuildTypeMapper.selectByBuildingid">
            <result column="typename" property="typename"/>
            <result column="typeid" property="typeid"/>
            <result column="count" property="count"/>
        </collection>
    </resultMap>
    <!--public List<Build> selectBuildQueryPojo(BuildQueryPojo buildQueryPojo);珂-->
   <select id="selectBuildQueryPojo" parameterType="BuildQueryPojo" resultMap="BuildMap">
       select build.* ,cta.ctarelname,cta.ctaimg from
       build
       left join cta on (build.ctaid=cta.ctaid)
       <where>
           <if test="province neq null">
               and province like "%" #{province} "%"
           </if>
           <if test="city neq null">
               and city like "%" #{city} "%"
           </if>
           <if test="district neq null">
               and barea like "%" #{district} "%"
           </if>
           <if test="charactere neq null">
               and build.charactere like "%" #{charactere} "%"
           </if>
           <if test="genre neq null">
               and genre like "%" #{genre} "%"
           </if>
           <if test="bTotalprice neq null">
               and bTotalprice &gt; #{bTotalprice}
           </if>

           <if test="bPerprice neq null">
               and bPerprice &gt; #{bPerprice}
           </if>

           <if test="acreage neq null">
               and acreage &gt; #{acreage}
           </if>
           <if test="maxAcreage neq null">
               or maxacreage &lt; #{maxAcreage}
           </if>
           <if test="comid neq null">
               and comid =#{comid}
           </if>
           <if test="typeid neq null">
               and buildingid in(
               select buildingid from buildtype where typeid=#{typeid} and count !=0
               )
           </if>
           <if test="comid neq null">
               and comid =#{comid}
           </if>
           <if test="genre neq null">
               and tenement like "%" #{genre} "%"
           </if>
           <if test="isonsale neq null">
               and discounts is not null and discounts != ''
           </if>
       </where>
   </select>
    <!--//添加楼盘（张宝）
    insert into build(building,ctaid,province,city,berea,bdetail,bpicture,tenement,btype,bline,comid,character,bperprice,bmaxtotalprice,btotalprice,acreage,maxacreage,condition,discounts,starttime,endtime,genre,agelimit,landtime,tencompany,tencost,tentype,greenrate,carport,cubage,fitment,bsalestatus)
       VALUES (#{building},#{ctaid},#{province},#{city},#{berea},#{bdetail},#{bpicture},#{tenement},#{btype},#{bline},#{comid},#{character},#{bperprice},#{bmaxtotalprice},#{btotalprice},#{acreage},#{maxacreage},#{condition},#{discounts},#{starttime},#{endtime},#{genre},#{agelimit},#{landtime},#{tencompany},#{tencost},#{tentype},#{greenrate},#{carport},#{cubage},#{fitment},#{bsalestatus})
        -->
    <!--public boolean setBuild(Build build);-->
    <insert id="setBuild" parameterType="Build">
       insert into build(building,province,city,barea,bdetail,lng,lat,bpicture,tenement,btype,comid,bperprice,bmaxtotalprice,btotalprice,acreage,maxacreage,conditions,starttime,endtime)
      VALUES (#{building},#{province},#{city},#{barea},#{bdetail},#{lng},#{lat},#{bpicture},#{tenement},#{btype},#{comid},#{bperprice},#{bmaxtotalprice},#{btotalprice},#{acreage},#{maxacreage},#{conditions},#{starttime},#{endtime})
  </insert>
    <!--//按开发商id和名字查询楼盘(张宝)-->
    <!--public List<Build> selectBuildByCondition(CompanyIdAndBuildName companyIdAndBuildName);-->
    <select id="selectBuildByCondition" parameterType="ComidAndBuildName" resultType="Build">
        SELECT * from build
        <where> comid=#{comid}
            <if test="building neq null">
                and building like "%" #{building} "%"
            </if>
            ORDER by buildingid DESC
        </where>
    </select>
    <!--//按楼盘id删除楼盘（张宝）-->
    <!--public boolean deleteBuildById(int buildId);-->
    <delete id="deleteBuildById" parameterType="int">
        DELETE FROM build WHERE buildingid=#{_parameter}
    </delete>
    <!--//按楼盘id查询楼盘（张宝）-->
    <!--public Build selectBuildById(int buildingid);-->
    <select id="selectBuildById" parameterType="int" resultType="Build">
        SELECT * from build WHERE buildingid=#{_parameter}
    </select>
    <!--//更新楼盘基本信息-->
    <!--public boolean updateBuildBasicInfo(Build build);-->
    <update id="updateBuildBasicInfo" parameterType="Build" >
        UPDATE build set building=#{building},btype=#{btype},bline=#{bline},charactere=#{charactere} WHERE buildingid=#{buildingid}
    </update>
    <!--//更新楼盘销售信息(张宝)-->
    <!--public boolean updateBuildSaleInfo(Build build);-->
    <update id="updateBuildSaleInfo" parameterType="Build">
        UPDATE build set bperprice=#{bperprice},btotalprice=#{btotalprice},bmaxtotalprice=#{bmaxtotalprice},acreage=#{acreage},maxacreage=#{maxacreage},conditions=#{conditions},bsalestatus=#{bsalestatus},discounts=#{discounts},starttime=#{starttime},endtime=#{endtime},agelimit=#{agelimit},landtime=#{landtime} WHERE buildingid=#{buildingid}
    </update>
    <!--//更新楼盘小区信息(张宝)-->
    <!--public boolean updateBuildSpaceInfo(Build build);-->
    <update id="updateBuildSpaceInfo" parameterType="Build">
        UPDATE build set tencompany=#{tencompany},tenement=#{tenement},tencost=#{tencost},tentype=#{tentype},greenrate=#{greenrate},carport=#{carport},cubage=#{cubage},fitment=#{fitment} WHERE buildingid=#{buildingid}
    </update>
    <!--//按楼盘id查询开发商（张宝）-->
    <!--public Company selectCompanyByBuildId(int buildingid);-->
    <select id="selectCompanyByBuildId" parameterType="int" resultType="Company">
        SELECT * from company where comid=(SELECT comid from build WHERE buildingid=#{_parameter})
    </select>
    <!--//优惠楼盘搜索（张宝）-->
    <!--public List<Build> selectDiscountBuild();-->
    <select id="selectDiscountBuild" resultType="Build">
        SELECT * from build WHERE discounts != "" AND discounts is not null
    </select>
    <!--//推荐楼盘搜索（张宝）-->
    <!--public List<Build> selectAdviceBuild();-->
    <select id="selectAdviceBuild" resultType="Build">
        SELECT * from build WHERE advice != "" AND advice is not null
    </select>
    <!--//附近城市楼盘搜索（张宝）-->
    <!--public List<Build> selectNearBuildByCity(String city);-->
    <select id="selectNearBuildByCity" resultType="Build" parameterType="String">
        SELECT * from build WHERE city = #{_parameter}
    </select>
    <!--//附近楼盘城区搜索（张宝）-->
    <!--public List<Build> selectNearBuildByBrea(String brea);-->
    <select id="selectNearBuildByBrea" resultType="Build" parameterType="String">
        SELECT * from build WHERE barea = #{_parameter}
    </select>
</mapper>
