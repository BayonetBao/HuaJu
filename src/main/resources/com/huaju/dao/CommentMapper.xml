<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huaju.dao.CommentMapper">
    <resultMap id="CommentMap" type="Comment">
        <id property="commentid" column="commentid"/>
        <result property="comtime" column="comtime"/>
        <result property="buildingid" column="buildingid"/>
        <result property="id" column="id"/>
        <result property="idtype" column="idtype"/>
        <result property="comtype" column="comtype"/>
        <result property="comcontent" column="comcontent"/>
        <result property="uname" column="uname"/>
        <result property="building" column="building"/>
        <collection property="favors" ofType="Favor">
            <result property="userid" column="fuserid"/>
        </collection>
    </resultMap>
    <!--public List<Comment>  selectCommentByQueryPojo(CommentQueryPojo commentQueryPojo);-->
    <select id="selectCommentByQueryPojo" parameterType="CommentQueryPojo" resultMap="CommentMap">
        select comment.* ,build.building ,favor.userid as fuserid,user.uname as uname from  comment left  join user on(comment.id=user.userid) left  join
        build on( build.buildingid=comment.buildingid) left join favor on(comment.commentid=favor.commentid)
        <where>
              idtype like "%" "用户" "%"
            <if test="buildingid neq null">
                and comment.buildingid=#{buildingid}
            </if>
            <if test="idtype neq null">
                and comment.idtype like "%" #{idtype} "%"
            </if>
            <if test="comtype neq null">
                and comment.comtype like "%" #{comtype} "%"
            </if>
        </where>
        UNION
        select comment.* ,build.building ,favor.userid as fuserid,cta.ctaname as uname from  comment left  join cta on(comment.id=cta.ctaid) left  join
        build on( build.buildingid=comment.buildingid) left join favor on(comment.commentid=favor.commentid)
        <where>
            idtype like "%" "咨询" "%"
            <if test="buildingid neq null">
                and comment.buildingid=#{buildingid}
            </if>
            <if test="idtype neq null">
                and comment.idtype like "%" #{idtype} "%"
            </if>
            <if test="comtype neq null">
                and comment.comtype like "%" #{comtype} "%"
            </if>
        </where>
        ORDER BY  comtime

    </select>
    <!--public List<Build> selectBuildInComment(Integer comid);-->
    <select id="selectBuildInComment" parameterType="int" resultType="Build">
    select DISTINCT build.buildingid,building from build,comment where build.buildingid=comment.buildingid
    and comid=#{_parameter}
    </select>
    <!--public boolean insertComment(Comment comment);-->
    <insert id="insertComment" parameterType="Comment">
        insert into comment(comcontent,comtime,buildingid,id,idtype,comtype)
         VALUES (#{comcontent},#{comtime},#{buildingid},#{id},#{idtype},#{comtype})
    </insert>
    <!--public  boolean deleteComment(Integer id);-->
    <delete id="deleteComment" parameterType="int">
        DELETE from comment where commentid=#{_parameter}
    </delete>
</mapper>